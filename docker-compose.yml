services:
  db:
    container_name: db
    image: mysql:8.0.34
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_USERNAME=${DB_ROOT_USERNAME}
    volumes:
      - "./application_data/db/data:/var/lib/mysql"
    ports:
      - '3306:3306'
    networks:
      - src_default
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    volumes:
      - "./application_data/redis/data:/root/redis"
    networks:
      - src_default
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ".:/var/www"
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - app
    networks:
      - src_default

  app:
    container_name: app
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - db
    ports:
      - "9000:9000"
    volumes:
      - ".:/var/www"
    networks:
      - src_default
networks:
  src_default:
    driver: bridge
